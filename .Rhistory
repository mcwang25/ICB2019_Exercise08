# Notes for class on 10/30/19
ages <- data.frame(names=c("Stu", "Colin", "John"), ages=c(38,24,23))
View(ages)
ages
ages[2,]
ages[,2]
ages[2]
agesMatrix <- as.matrix(ages)
str(agesMatrix)
agesMatrix[2]
agesMatrix[,2]
View(agesMatrix)
View(agesMatrix)
ages$ages
ages[1:2,]
ages[1:2,2]
ages$ages<30
ages$ages
ages[ages$ages<30,]
ages[ages$ages>30,]
names
names
names
n <- c("Amy","Betty","Claire","Donna","Erin")
names
n
n[3]
n[1:2]
m <- matrix(1:4, nrow=2, ncol=2)
m
l <- list(n,m)
l
l[1]
l[1,4:5]
l[4:5,]
l[4:5]
l[[1]4:5]
l[x[[1]],4:5]
l[[[1]]4:5]
l[[1]]4:5]
l[[1]],4:5]
l[[1]][4:5]
l[[2]][1,2]
getwd()
read.csv(C:/cygwin64/r-novice-inflammation/data/wages)
read.csv(wages.csv)
read.csv("C:/cygwin64/r-novice-inflammation/data/wages")
setwd(..)
getwd()
read.csv(file="C:/cygwin64/r-novice-inflammation/data/wages.csv")
w <- read.csv(file="C:/cygwin64/r-novice-inflammation/data/wages.csv")
View(w)
View(w)
w <- read.csv(file="C:/cygwin64/r-novice-inflammation/data/wages.csv")
w[4,]
getwd()
setwd("C:/cygwin64/r_exercises/Exercise_08")
list.files()
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
View(bball)
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
UWscores <- bball[bball$team=="UW",]
MSUscores <- bball[bball$team=="MSU",]
View(MSUscores)
View(UWscores)
MSUscores$team <- NULL
View(MSUscores)
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
UWscores <- bball[bball$team=="UW",]
MSUscores <- bball[bball$team=="MSU",]
?ave
MSUscores$cumscore <- ave(MSUscores$score, MSUscores$time, FUN=cumsum)
View(MSUscores)
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
UWscores <- bball[bball$team=="UW",]
MSUscores <- bball[bball$team=="MSU",]
MSUscores$team <- NULL
UWscores$team <- NULL
MSUscores$cumscore <- ave(MSUscores$score, FUN=cumsum)
MSUscores$cumscore <- ave(MSUscores$score, FUN=cumsum)
View(MSUscores)
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
UWscores <- bball[bball$team=="UW",]
MSUscores <- bball[bball$team=="MSU",]
MSUscores$team <- NULL
UWscores$team <- NULL
MSUscores$cumscore <- ave(MSUscores$score, FUN=cumsum)
UWscores$cumscore <- ave(UWscores$score, FUN=cumsum)
MSUscores$score <- NULL
UWscores$score <- NULL
?plot
plot(x=MSUscores$time, y=MSUscores$cumscore, type='l')
plot(x=MSUscores$time, y=MSUscores$cumscore, type='l')+lines(x=UWscores$time,y=UWscores$cumscore)
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
UWscores <- bball[bball$team=="UW",]
MSUscores <- bball[bball$team=="MSU",]
MSUscores$team <- NULL
UWscores$team <- NULL
MSUscores$cumscore <- ave(MSUscores$score, FUN=cumsum)
UWscores$cumscore <- ave(UWscores$score, FUN=cumsum)
MSUscores$score <- NULL
UWscores$score <- NULL
plot(x=MSUscores$time, y=MSUscores$cumscore, type='l')+lines(x=UWscores$time,y=UWscores$cumscore)
?sample
?readline
integer <- 1:100
magicnumber <- sample(integer)
print("I'm programmed to generate a random integer between 1 and 100...")
i=readline(prompt="Guess an appropriate integer:")
while(count<10)
if (i<magicnumber){
count <- count+1
print("Higher!")
i=readline(prompt="Guess an appropriate integer:")
}else if (i>magicnumber){
count <- count+1
print("Lower!")
i=readline(prompt="Guess an appropriate integer:")
}else{
print("Correct!")
}
while(count>9)
print("Out of guesses! Better luck next time!")
?sample
integer <- 1:100
magicnumber <- sample(integer,size=1)
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
i <- readline(prompt="Guess an appropriate integer:")
while(count<10)
if (i<magicnumber){
count <- count+1
print("Higher!")
i <- readline(prompt="Guess an appropriate integer:")
}else if (i>magicnumber){
count <- count+1
print("Lower!")
i <- readline(prompt="Guess an appropriate integer:")
}else{
print("Correct!")
}
while(count>9)
print("Out of guesses! Better luck next time!")
i <- readline(prompt="Guess an appropriate integer:")
i <- readline(prompt="Guess an appropriate integer:")
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
count=0
while(count<10)
i <- readline(prompt="Guess an appropriate integer:")
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...you have 10 chances.")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...you have 10 chances.")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
# Number guessing game between 1 and 100 with 10 attempts
integer <- 1:100
magicnumber <- sample(integer,size=1)
print("I'm programmed to generate a random integer between 1 and 100...you have 10 chances.")
count=0
while(count<10)
if (readline(prompt="Guess:")<magicnumber){
count <- count+1
print("Higher!")
}else if (readline(prompt="Guess:")>magicnumber){
count <- count+1
print("Lower!")
}else{
print("Correct!")
}
rm(i)
# Makes plot of UW v MSU game score vs time from 1-22-13
# Note assignment says not to worry about how please the graph is visually, merely to focus on necessary control structures
bball <- read.table(file="UWvMSU_1-22-13.txt", header=TRUE)
UWscores <- bball[bball$team=="UW",]
MSUscores <- bball[bball$team=="MSU",]
MSUscores$team <- NULL
UWscores$team <- NULL
MSUscores$cumscore <- ave(MSUscores$score, FUN=cumsum)
UWscores$cumscore <- ave(UWscores$score, FUN=cumsum)
MSUscores$score <- NULL
UWscores$score <- NULL
plot(x=MSUscores$time, y=MSUscores$cumscore, type='l')+lines(x=UWscores$time,y=UWscores$cumscore)
